  test.cpp
e:\github\dailyexercise\project\test.cpp(22): warning C4244: “参数”: 从“time_t”转换到“unsigned int”，可能丢失数据
e:\github\dailyexercise\project\test.cpp(24): warning C4244: “初始化”: 从“unsigned __int64”转换到“unsigned long”，可能丢失数据
e:\github\dailyexercise\project\test.cpp(31): warning C4244: “初始化”: 从“unsigned __int64”转换到“unsigned long”，可能丢失数据
e:\github\dailyexercise\project\test.cpp(35): warning C4244: “初始化”: 从“unsigned __int64”转换到“unsigned long”，可能丢失数据
e:\github\dailyexercise\project\test.cpp(37): warning C4244: “初始化”: 从“unsigned __int64”转换到“unsigned long”，可能丢失数据
e:\github\dailyexercise\project\algorithm\hash\hash.h(23): warning C4018: “<”: 有符号/无符号不匹配
  e:\github\dailyexercise\project\algorithm\hash\hash.h(21): note: 编译类 模板 成员函数“size_t tg::_DefaultHashFunc<K>::hash(std::string,std::size_t) const”时
          with
          [
              K=std::string
          ]
  e:\github\dailyexercise\project\algorithm\hash\hash.h(17): note: 参见对正在编译的函数 模板 实例化“size_t tg::_DefaultHashFunc<K>::hash(std::string,std::size_t) const”的引用
          with
          [
              K=std::string
          ]
  e:\github\dailyexercise\project\algorithm\hash\hash.h(206): note: 参见对正在编译的类 模板 实例化“tg::_DefaultHashFunc<K>”的引用
          with
          [
              K=std::string
          ]
  e:\github\dailyexercise\project\algorithm\hash\hash.h(199): note: 编译类 模板 成员函数“bool tg::bucketImpl<K,V,tg::_DefaultHashFunc<K>>::insert_unqiue(const K &,const V &)”时
          with
          [
              K=std::string,
              V=std::string
          ]
  e:\github\dailyexercise\project\algorithm\hash\hash.h(68): note: 参见对正在编译的函数 模板 实例化“bool tg::bucketImpl<K,V,tg::_DefaultHashFunc<K>>::insert_unqiue(const K &,const V &)”的引用
          with
          [
              K=std::string,
              V=std::string
          ]
  e:\github\dailyexercise\project\algorithm\hash\hash.h(265): note: 参见对正在编译的类 模板 实例化“tg::bucketImpl<K,V,tg::_DefaultHashFunc<K>>”的引用
          with
          [
              K=std::string,
              V=std::string
          ]
  e:\github\dailyexercise\project\algorithm\hash\hash.h(265): note: 编译类 模板 成员函数“std::string tg::hashtable<std::string,std::string>::to_String(void)”时
  e:\github\dailyexercise\project\test.cpp(18): note: 参见对正在编译的函数 模板 实例化“std::string tg::hashtable<std::string,std::string>::to_String(void)”的引用
  e:\github\dailyexercise\project\test.cpp(15): note: 参见对正在编译的类 模板 实例化“tg::hashtable<std::string,std::string>”的引用
  DailyExercise.vcxproj -> E:\github\DailyExercise\build\output\win32\Debug\DailyExercise.exe
  DailyExercise.vcxproj -> E:\github\DailyExercise\build\output\win32\Debug\DailyExercise.pdb (Partial PDB)
